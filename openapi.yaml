openapi: '3.0.3'
info:
  title: Blockmate
  description: Blockmate API OpenAPI documentation
  termsOfService: https://www.blockmate.io/term/terms-and-conditions
  version: '0.0.2'

servers:
- description: Blockmate API
  url: https://api.blockmate.io

paths:
  #
  # Authentication
  #
  /v1/auth:
    get:
      summary: Authenticate project
      operationId: UserAPI-AuthenticateProject
      tags:
        - Authentication
      security:
        - ProjectToken: [ ]
      responses:
        200:
          description: Returns a JWT for ProjectJWT
          content:
            application/json:
              schema:
                required:
                  - token
                type: object
                properties:
                  token:
                    type: string
                    example: some-token
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/auth/developer:
    get:
      summary: Authenticate developer
      operationId: UserAPI-AuthenticateDeveloper
      tags:
        - Authentication
      security:
        - ProjectToken: [ ]
      responses:
        200:
          description: Returns a JWT for UserJWT. This is a special user, mapped to the project. If you want to have multiple users, see User management.
          content:
            application/json:
              schema:
                required:
                  - token
                type: object
                properties:
                  token:
                    type: string
                    example: some-token
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  #
  # User management
  #
  /v1/users:
    get:
      summary: List users
      operationId: ListUsers
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
    post:
      summary: Create user
      operationId: CreateUser
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      requestBody:
        description: User
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: some-name
      responses:
        201:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/users/{id}:
    get:
      summary: Get user
      operationId: GetUser
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      parameters:
        - description: User id
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 4301140e-d639-11ec-9120-00155d03ab64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      summary: Update user
      operationId: UpdateUser
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      parameters:
        - description: User id
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 4301140e-d639-11ec-9120-00155d03ab64
      requestBody:
        description: User
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: some-name
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      summary: Delete user
      operationId: DeleteUser
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      parameters:
        - description: User id
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 4301140e-d639-11ec-9120-00155d03ab64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OK
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found
  /v1/users/{id}/auth:
    get:
      summary: Authenticate user
      operationId: AuthUser
      tags:
        - User management
      security:
        - ProjectToken: [ ]
      parameters:
        - description: User id
          in: path
          name: id
          required: true
          schema:
            type: string
            example: 4301140e-d639-11ec-9120-00155d03ab64
      responses:
        200:
          description: UserJWT
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    description: UserJWT
                    type: string
                    example: some-token
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Not Found
  #
  # User account management
  #
  /v1/{account_provider}/connect:
    get:
      summary: Get account hint
      operationId: GetAccountHint
      tags:
        - User account management
      security:
        - UserJWT: [ ]
      parameters:
        - description: URL value from account_providers method
          in: path
          name: account_provider
          required: true
          schema:
            type: string
            example: onchain/btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - description
                  - url
                  - intro
                  - fields
                  - oauth
                properties:
                  description:
                    example: Bitcoin (BTC)
                    type: string
                  url:
                    example: some-url
                    type: string
                  intro:
                    example: Use your address to connect your account.
                    type: string
                  fields:
                    type: object
                    properties:
                      description:
                        type: string
                        example: Account description
                      wallet:
                        type: string
                        example: Address
                    additionalProperties:
                      type: string
                  oauth:
                    example: false
                    type: boolean
                  icon:
                    type: string
                    example: https://api.blockmate.io/v1/onchain/static/bitcoin.png
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    example: Invalid token or expired token.
                    type: string
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    example: not_found
                    type: string
    post:
      summary: Connect new account
      operationId: ConnectAccount
      tags:
        - User account management
      security:
        - UserJWT: [ ]
      parameters:
        - description: URL value from account_providers method
          in: path
          name: account_provider
          required: true
          schema:
            type: string
            example: onchain/btc
      requestBody:
        description: OK
        content:
          application/json:
            schema:
              type: object
              required:
                - wallet
                - description
              properties:
                wallet:
                  type: string
                  example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
                description:
                  type: string
                  example: some-description
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - name
                  - description
                  - verified
                properties:
                  id:
                    type: string
                    example: 163b6df1-dc0b-4086-8922-6068fe1e653d
                  name:
                    type: string
                    example: some-name
                  description:
                    type: string
                    example: some-description
                  verified:
                    type: boolean
                    example: false
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Account wallet already connected.
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Invalid token or expired token.
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Method Not Allowed
  /v1/{account_provider}/account/{account_id}:
    delete:
      summary: Delete account
      operationId: DeleteAccount
      tags:
        - User account management
      security:
        - UserJWT: [ ]
      parameters:
        - description: URL value from account_providers method
          in: path
          name: account_provider
          required: true
          schema:
            type: string
            example: onchain/btc
        - description: Account ID
          in: path
          name: account_id
          required: true
          schema:
            type: string
            example: 163b6df1-dc0b-4086-8922-6068fe1e653d
      responses:
        200:
          description: OK
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Invalid token or expired token.
        404:
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Not Found
  #
  # Aggregated info
  #
  /v1/aggregate/account_providers:
    get:
      summary: Get list of account providers
      operationId: AccountProvidersList
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: List of account providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountProvider"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  /v1/aggregate/account_provider_hints:
    get:
      summary: Get list of account providers hints
      operationId: AccountProviderHintsList
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: List of account providers hints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountProviderHint"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  /v1/aggregate/accounts:
    get:
      summary: List accounts
      operationId: Accounts
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: List of user accounts.
          content:
            application/json:
              schema:
                type: array
                items:
                  title: Account
                  description: Represents an account.
                  required:
                    - id
                    - name
                    - description
                    - verified
                    - type
                    - url
                  type: object
                  properties:
                    id:
                      example: 4cf7cf36-52a2-11ec-85b8-00155de33000
                      type: string
                    name:
                      example: btc
                      type: string
                    description:
                      example: My account
                      type: string
                    verified:
                      example: true
                      type: boolean
                    type:
                      example: crypto_wallet
                      type: string
                      enum:
                        - crypto_wallet
                        - crypto_exchange
                    url:
                      example: onchain/bitcoin/account/4cf7cf36-52a2-11ec-85b8-00155de33000
                      type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  /v1/aggregate/balance:
    get:
      summary: Get balance
      operationId: Balance
      parameters:
        - name: currency
          in: query
          schema:
            type: string
            example: USD
          description: |
            Currency to convert to.
        - name: account-filter
          in: query
          schema:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: |
            Filter results to only provided account.
            When omitted, it returns all transactions from all accounts.
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: Cumulated balance for user accounts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    title: Balance response
                    description: Represents a response from aggregated balance request.
                    type: object
                    required:
                      - balance_sum
                      - accounts
                    properties:
                      balance_sum:
                        type: array
                        items:
                          '$ref': '#/components/schemas/Amount'
                      accounts:
                        type: array
                        items:
                          type: object
                          required:
                            - account_id
                            - description
                            - type
                            - balance
                            - state
                            - name
                            - verified
                            - url
                          properties:
                            account_id:
                              type: string
                              example: 9f0f06ae-08d7-11ed-b3ef-00155d0eaa6e
                            description:
                              type: string
                              example: My account
                            type:
                              type: string
                              enum:
                                - crypto_wallet
                                - crypto_exchange
                            balance:
                              type: array
                              items:
                                '$ref': '#/components/schemas/Amount'
                            state:
                              type: object
                              properties:
                                last_sync:
                                  type: string
                                  example: 2022-07-21T09:21:37.384496+00:00
                                  description: null if initial sync was not yet done
                                  nullable: true
                            name:
                              type: string
                              example: some-name
                            verified:
                              type: boolean
                              example: true
                            url:
                              type: string
                              example: some-url
                required:
                  - balance
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  /v1/aggregate/transactions:
    get:
      summary: Get transactions
      operationId: Transactions
      parameters:
        - name: since
          in: query
          schema:
            type: string
            format: date
            pattern: "^[0-9]{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$"
            example: 2020-01-01
          description: |
            Set time from which the transactions will be get.
        - name: until
          in: query
          schema:
            type: string
            format: date
            pattern: "^[0-9]{4}-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$"
            example: 2020-02-01
          description: |
            Set time to which the transactions will be get.
            The default value is the actual date.
        - name: limit
          in: query
          schema:
           type: number
           example: 10
          description: |
            Limit the number of the transactions in the response.
            Default page size is 50.
        - name: cursor
          in: query
          schema:
            type: string
          description: |
            Specify on requesting the next page. Use the `page_cursor` from the previous response.
        - name: currency
          in: query
          schema:
            type: string
            example: USD
          description: |
            Currency to convert to.
        - name: account-filter
          in: query
          schema:
            type: string
            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          description: |
            Filter results to only provided account.
            When omitted, it returns all transactions from all accounts.
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: Get user transactions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  page_cursor:
                    type: string
                    description: Use this as `cursor` in the next request to get the next page. The `page_cursor` has a one hour validity.
                  accounts:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - description
                        - verified
                        - type
                        - state
                      properties:
                        id:
                          example: 0940bb4a-0940-11ed-9ed1-00155d5116f0
                          type: string
                        description:
                          example: My account
                          type: string
                        verified:
                          example: true
                          type: boolean
                        type:
                          example: crypto_wallet
                          type: string
                          enum:
                            - crypto_wallet
                            - crypto_exchange
                        state:
                          type: object
                          properties:
                            last_sync:
                              type: string
                              example: 2022-07-21T09:21:37.384496+00:00
                              description: null if initial sync was not yet done
                              nullable: true
                  transactions:
                    type: array
                    items:
                      title: Transaction
                      description: Represents a transaction.
                      type: object
                      required:
                        - account_id
                        - transaction_id
                        - type
                        - amount
                        - total
                        - fee
                        - created_at
                        - inputs
                        - outputs
                      properties:
                        account_id:
                          type: string
                          example: 0940bb4a-0940-11ed-9ed1-00155d5116f0
                        transaction_id:
                          type: string
                          example: "0xf77c19d9333bb26fd9d6773a18a8b5fd145e2fbb514ff2879cb478e13e2f8c23"
                        type:
                          type: string
                          example: crypto_wallet
                          enum:
                            - crypto_wallet
                            - crypto_exchange
                        side:
                          type: string
                          example: some-side
                        amount:
                          type: array
                          items:
                            '$ref': '#/components/schemas/Amount'
                        total:
                          type: array
                          items:
                            '$ref': '#/components/schemas/Amount'
                        fee:
                          type: array
                          items:
                            '$ref': '#/components/schemas/Amount'
                        created_at:
                          type: string
                          example: 2022-07-21T09:21:37.384496+00:00
                        inputs:
                          type: array
                          items:
                            '$ref': '#/components/schemas/Movement'
                        outputs:
                          type: array
                          items:
                            '$ref': '#/components/schemas/Movement'
                required:
                  - transactions
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  /v1/aggregate/nft_metadata:
    get:
      summary: Get NFT metadata
      operationId: NFTMetadata
      security:
        - UserJWT: [ ]
      tags:
        - Aggregated info
      responses:
        200:
          description: Get NFT metadata.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  description: The response format is dependent on a third-party, so it can change in the future.
                  properties:
                    ownedNfts:
                      type: array
                      items:
                        $ref: '#/components/schemas/OwnedNft'
                    totalCount:
                      type: string
                      description: 'String - Total number of NFTs owned by the given address.'
                    blockHash:
                      type: string
                      description: 'String - The canonical head block hash of when your request was received'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: missing key in request header
                    type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    example: Unauthorized
                    type: string
  #
  # Risk info
  #
  /v1/risk/score:
    get:
      summary: Get address risk score
      operationId: GetAddressRiskScore
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: address
          in: query
          description: Address for which risk should be returned
          schema:
            type: string
            example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
        - name: chain
          in: query
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
                  risk:
                    type: integer
                    example: 85
                    minimum: 0
                    maximum: 100
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
    post:
      summary: Get multiple risk scores for addresses
      operationId: GetMultipleAddressRiskScore
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: chain
          in: query
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      requestBody:
        description: Addresses for which risk should be returned (maximum of 5000 in one request)
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  x-additionalPropertiesName: address
                  type: integer
                  description: risk
                example:
                  bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq: 10
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/risk/score/details:
    get:
      summary: Get address risk score details
      operationId: GetAddressRiskScoreDetails
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: address
          in: query
          description: Address for which risk should be returned
          schema:
            type: string
            example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
        - name: chain
          in: query
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/AddressRiskReport'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/risk/score/details/{case_id}:
    get:
      summary: Get address risk score case
      operationId: GetAddressRiskScoreCase
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - description: Case identifier
          in: path
          name: case_id
          required: true
          schema:
            type: string
            example: 7c656013-5e9b-4c71-8322-6562c5a9b34c
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/AddressRiskReport'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        404:
          description: Not found
  /v1/risk/transaction/score:
    get:
      summary: Get transaction risk score
      operationId: GetTransactionRiskScore
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: transaction
          in: query
          description: Transaction hash for which risk should be returned
          schema:
            type: string
            example: "0638e15482e9d0fdb08920666390a546f32dd6ab15ffc81ed97e67b73b0d7205"
        - name: chain
          in: query
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  transaction:
                    type: string
                    example: "0638e15482e9d0fdb08920666390a546f32dd6ab15ffc81ed97e67b73b0d7205"
                  risk:
                    type: integer
                    example: 85
                    minimum: 0
                    maximum: 100
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/risk/transaction/score/details:
    get:
      summary: Get transaction risk score details
      operationId: GetTransactionRiskScoreDetails
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: transaction
          in: query
          description: Transaction hash for which risk should be returned
          schema:
            type: string
            example: "0638e15482e9d0fdb08920666390a546f32dd6ab15ffc81ed97e67b73b0d7205"
        - name: chain
          in: query
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TransactionRiskReport'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/risk/transaction/score/details/{case_id}:
    get:
      summary: Get transaction risk score case
      operationId: GetTransactionRiskScoreCase
      tags:
        - Risk info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - description: Case identifier
          in: path
          name: case_id
          required: true
          schema:
            type: string
            example: 7149168f-ad69-4fc9-b027-a16b0ca13081
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                '$ref': '#/components/schemas/TransactionRiskReport'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  #
  # Exchange rate info
  #
  /v1/exchangerate/current:
    get:
      summary: Get current exchange rate
      operationId: GetCurrentExchangeRate
      tags:
        - Exchange rate info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: pairs
          in: query
          required: true
          description: Currency pairs for which exchange rate should be returned (max 20 per request)
          schema:
            type: string
            example: "ETH/USD,BTC/EUR"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/ExchangeRate'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/exchangerate/history:
    get:
      summary: Get historical exchange rate
      operationId: GetHistoricalExchangeRate
      tags:
        - Exchange rate info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: pair
          in: query
          required: true
          description: Currency pair for which exchange rates should be returned
          schema:
            type: string
            example: "ETH/USD"
        - name: days
          in: query
          required: true
          description: Historical dates for which exchange rates should be returned (max 40 per request)
          schema:
            type: string
            example: "2022-06-30,2022-06-29"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  '$ref': '#/components/schemas/ExchangeRate'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  #
  # Address name info
  #
  /v1/addressname/simple:
    get:
      summary: Get address name and category info for single address
      operationId: GetAddressNameInfoSingle
      tags:
        - Address name and category info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: address
          in: query
          required: true
          description: Address for which name and category should be returned
          schema:
            type: string
            example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
        - name: chain
          in: query
          required: true
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: some-name
                  category:
                    type: string
                    example: some-category
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/addressname/multi:
    post:
      summary: Get address name and category info for multiple addresses
      operationId: GetAddressNameInfoMulti
      tags:
        - Address name and category info
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: chain
          in: query
          required: true
          description: Blockchain identifier
          schema:
            type: string
            example: btc
      requestBody:
        description: Addresses for which name and category should be returned (maximum of 5000 in one request)
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                example: "bc1qjl7k0dpcsw3djmzq25qv6peavgxysq95pcduuq"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                additionalProperties:
                  x-additionalPropertiesName: address
                  type: object
                  properties:
                    name:
                      type: string
                      example: some-name
                    category:
                      type: string
                      example: some-category
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  #
  # ENS domains and addresses
  #
  /v1/ens/addressFromDomain:
    get:
      summary: Get address for specified ENS domain
      operationId: GetAddressFromDomain
      tags:
        - ENS
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: domain
          in: query
          required: true
          description: ENS domain for which Ethereum address should be returned
          schema:
            type: string
            example: "alice.eth"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  address:
                    type: string
                    example: "0xcd2e72aebe2a203b84f46deec948e6465db51c75"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/ens/domainFromAddress:
    get:
      summary: Get domain and metadata for specified ENS address
      operationId: GetDomainFromAddress
      tags:
        - ENS
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      parameters:
        - name: address
          in: query
          required: true
          description: Ethereum address for which domain and metadata should be returned
          schema:
            type: string
            example: "0xcd2e72aebe2a203b84f46deec948e6465db51c75"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  domain:
                    type: string
                    example: "alice.eth"
                  metadata:
                    description: The response format is dependent on a third-party, so it can change in the future.
                    type: object
                    properties:
                      attributes:
                        type: array
                        items:
                          type: object
                          properties:
                            display_type:
                              type: string
                              example: "date"
                            trait_type:
                              type: string
                              example: "Created Date"
                            value:
                              oneOf:
                                - type: string
                                - type: integer
                              example: 1571297811000
                      background_image:
                        type: string
                        example: "https://metadata.ens.domains/mainnet/avatar/alice.eth"
                      description:
                        type: string
                        example: "alice.eth, an ENS name."
                      image:
                        type: string
                        example: "https://metadata.ens.domains/mainnet/0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85/0x9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501/image"
                      image_url:
                        type: string
                        example: "https://metadata.ens.domains/mainnet/0x57f1887a8BF19b14fC0dF6Fd9B2acc9Af147eA85/0x9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501/image"
                      is_normalized:
                        type: boolean
                        example: true
                      name:
                        type: string
                        example: "alice.eth"
                      name_length:
                        type: integer
                        example: 5
                      segment_length:
                        type: integer
                        example: 5
                      url:
                        type: string
                        example: "https://app.ens.domains/name/alice.eth"
                      version:
                        type: integer
                        example: 0
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  #
  # Analytics
  #
  /v1/analytics/project/stats:
    get:
      summary: Get analytics focused on gaming for whole project
      operationId: GetProjectAnalytics
      description: Get analytics focused on gaming for whole project. All empty values are omitted from the response. Values are recalculated once per day.
      tags:
        - Analytics
      security:
        - UserJWT: [ ]
        - ProjectJWT: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Analytics'
        204:
          description: No Content (happens when at least one account is connected, but values were not recalculated yet)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/analytics/user/stats:
    get:
      summary: Get analytics focused on gaming for this user
      operationId: GetUserAnalytics
      description: Get analytics focused on gaming for this user. All empty values are omitted from the response. Values are recalculated once per day.
      tags:
        - Analytics
      security:
        - UserJWT: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Analytics'
        204:
          description: No Content (happens when at least one account is connected, but values were not recalculated yet)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/analytics/{account_provider}/stats:
    get:
      summary: Get analytics focused on gaming for specified provider
      operationId: GetProviderAnalytics
      description: Get analytics focused on gaming for specified provider. All empty values are omitted from the response. Values are recalculated once per day.
      tags:
        - Analytics
      security:
        - UserJWT: [ ]
      parameters:
        - description: URL value from account_providers method
          in: path
          name: account_provider
          required: true
          schema:
            type: string
            example: onchain/btc
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/Analytics'
        204:
          description: No Content (happens when at least one account is connected, but values were not recalculated yet)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /v1/analytics/{account_provider}/account/{account_id}/stats:
    get:
      summary: Get analytics focused on gaming for specified account and provider
      operationId: GetAccountAnalytics
      description: Get analytics focused on gaming for specified account and provider. All empty values are omitted from the response. Values are recalculated once per day.
      tags:
        - Analytics
      security:
        - UserJWT: [ ]
      parameters:
        - description: URL value from account_providers method
          in: path
          name: account_provider
          required: true
          schema:
            type: string
            example: onchain/btc
        - description: Account ID
          in: path
          name: account_id
          required: true
          schema:
            type: string
            example: 163b6df1-dc0b-4086-8922-6068fe1e653d
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
        204:
          description: No Content (happens when account is connected, but values were not recalculated yet)
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: missing key in request header
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized

components:
  securitySchemes:
    UserJWT:
      description: User JWT Token
      type: http
      scheme: bearer
      bearerFormat: JWT
    ProjectJWT:
      description: Project JWT Token
      type: http
      scheme: bearer
      bearerFormat: JWT
    ProjectToken:
      description: Project Token used to manage users and to get JWT tokens used outside of Authentication API
      type: apiKey
      name: X-API-KEY
      in: header
  schemas:
    User:
      title: User
      description: Represents a user
      type: object
      required:
        - uuid
        - name
      properties:
        uuid:
          type: string
          example: 4301140e-d639-11ec-9120-00155d03ab64
        name:
          type: string
          example: some-name
    AccountProvider:
      title: Account Provider
      description: Account provider
      type: object
      required:
        - name
        - type
        - url
      properties:
        name:
          type: string
          example: btc
        type:
          type: string
          example: crypto_wallet
          enum:
            - crypto_wallet
            - crypto_exchange
        url:
          type: string
          example: onchain/bitcoin
    Amount:
      title: Amount
      description: Amount
      type: object
      required:
        - value
        - currency
        - currency_name
        - currency_symbol
      properties:
        value:
          type: number
          example: 1.2
        currency:
          type: string
          example: "ETHEREUM:0xdAC17F958D2ee523a2206206994597C13D831ec7"
        currency_name:
          type: string
          example: Tether USD
        currency_symbol:
          type: string
          example: USDT
        image_name:
          type: string
          example: Alvibop
          nullable: true
        image_url:
          type: string
          example: https://storage.googleapis.com/starly-prod.appspot.com/users/07SXODs3nHWOc0udxtCA7hU9KgR2/collections/pSYegq3aubUCodcy1t4u/cards/16/converted_cover1632338824700_600x800.mp4
          nullable: true
        converted_currency:
          type: string
          example: USD
        converted_value:
          type: number
          example: 1.2
    Movement:
      title: Movement
      description: Movement
      type: object
      required:
        - address
        - currency
        - currency_name
        - currency_symbol
        - value
        - owned
        - fee
      properties:
        address:
          type: string
          example: "0xc50e6db1637423819edbccb20b15654338d65501"
        currency:
          type: string
          example: "ETHEREUM:0xdAC17F958D2ee523a2206206994597C13D831ec7"
        currency_name:
          type: string
          example: Tether USD
        currency_symbol:
          type: string
          example: USDT
        value:
          type: number
          example: 1.2
        owned:
          type: boolean
          example: true
        fee:
          type: boolean
          example: false
        image_name:
          type: string
          example: Alvibop
          nullable: true
        image_url:
          type: string
          example: https://storage.googleapis.com/starly-prod.appspot.com/users/07SXODs3nHWOc0udxtCA7hU9KgR2/collections/pSYegq3aubUCodcy1t4u/cards/16/converted_cover1632338824700_600x800.mp4
          nullable: true
        converted_currency:
          type: string
          example: USD
        converted_value:
          type: number
          example: 1.2
        name:
          type: string
          description: name if known
        category:
          type: string
          description: category if known
          example: exchange
    AccountProviderHint:
      title: Account Provider Hint
      description: Account provider hint containing info about what is needed to connect such an account
      type: object
      required:
        - account_name
        - account_type
        - account_url
        - description
        - url
        - info
        - fields
        - oauth
        - icon
      properties:
        account_name:
          type: string
          example: btc
        account_type:
          type: string
          example: crypto_wallet
          enum:
            - crypto_wallet
            - crypto_exchange
        account_url:
          type: string
          example: onchain/btc
        description:
          type: string
          example: Bitcoin (BTC)
        url:
          type: string
          example: https://bitcoin.com
        intro:
          type: string
          example: Use your address to connect your account.
        fields:
          type: object
          properties:
            api_key:
              type: string
              example: API Key
            api_secret:
              type: string
              example: API Secret
            api_passphrase:
              type: string
              example: API Passphrase
            description:
              type: string
              example: Account description
            wallet:
              type: string
              example: Address
          additionalProperties:
            type: string
        oauth:
          type: boolean
          example: false
        icon:
          type: string
          example: https://api.blockmate.io/v1/onchain/static/bitcoin.png
    OwnedNft:
      title: OwnedNft
      description: OwnedNft
      type: object
      properties:
        contract:
          description: 'Object - Contract for returned NFT'
          type: object
          properties:
            address:
              type: string
              description: 'String - Address of NFT contract.'
        id:
          $ref: '#/components/schemas/NftId'
        balance:
          type: string
          description: 'String - Token balance'
        title:
          type: string
          description: 'String - Name of the NFT asset.'
        description:
          type: string
          description: 'String - Brief human-readable description'
        tokenUri:
          $ref: '#/components/schemas/NftTokenUri'
        media:
          type: object
          properties:
            raw:
              $ref: '#/components/schemas/NftRaw'
            gateway:
              $ref: '#/components/schemas/NftGateway'
            thumbnail:
              type: string
              description: URL for a resized thumbnail of the NFT media asset.
            format:
              type: string
              description: The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.
            bytes:
              type: integer
              description: The size of the media asset in bytes.
        metadata:
          $ref: '#/components/schemas/metadata'
        timeLastUpdated:
          type: string
          description: 'String - ISO timestamp of the last cache refresh for the information returned in the metadata field.'
        error:
          type: string
          description: 'String - A string describing a particular reason that we were unable to fetch complete metadata for the NFT.'
        contractMetadata:
          $ref: '#/components/schemas/NftContractMetadata'
        spamInfo:
          $ref: '#/components/schemas/NftSpamInfo'
    NftTokenType:
      type: string
      description: "String - 'ERC721' or 'ERC1155'"
    NftRaw:
      type: string
      description: "String - Uri representing the location of the NFT's original metadata blob. This is a backup for you to parse when the metadata field is not automatically populated."
    NftGateway:
      type: string
      description: 'String - Public gateway uri for the raw uri above.'
    NftId:
      type: object
      properties:
        tokenId:
          type: string
          description: String - The ID of the token. Can be in hex or decimal format.
        tokenMetadata:
          type: object
          properties:
            tokenType:
              $ref: '#/components/schemas/NftTokenType'
    NftTokenUri:
      type: object
      properties:
        raw:
          $ref: '#/components/schemas/NftRaw'
        gateway:
          $ref: '#/components/schemas/NftGateway'
    metadata:
      type: object
      description: 'String - Relevant metadata for NFT contract. This is useful for viewing image url, traits, etc. without having to follow the metadata url in tokenUri to parse manually.'
      properties:
        image:
          type: string
          description: 'String - URL to the NFT asset image. Can be standard URLs pointing to images on conventional servers, IPFS, or Arweave. Most types of images (SVGs, PNGs, JPEGs, etc.) are supported by NFT marketplaces.'
        external_url:
          type: string
          description: 'String - The image URL that appears alongside the asset image on NFT platforms.'
        background_color:
          type: string
          description: 'String - Background color of the NFT item. Usually must be defined as a six-character hexadecimal.'
        name:
          type: string
          description: 'String - Name of the NFT asset.'
        description:
          type: string
          description: 'String - Human-readable description of the NFT asset. (Markdown is supported/rendered on OpenSea and other NFT platforms)'
        attributes:
          type: array
          items:
            type: object
            properties:
              value:
                type: string
              trait_type:
                type: string
          description: 'Object - Traits/attributes/characteristics for each NFT asset.'
        media:
          $ref: '#/components/schemas/NftMedia'
    NftMedia:
      type: object
      properties:
        raw:
          $ref: '#/components/schemas/NftRaw'
        gateway:
          $ref: '#/components/schemas/NftGateway'
        thumbnail:
          type: string
          description: URL for a resized thumbnail of the NFT media asset.
        format:
          type: string
          description: The media format (jpg, gif, png, etc.) of the gateway and thumbnail assets.
        bytes:
          type: integer
          description: The size of the media asset in bytes.
    NftContractMetadata:
      type: object
      properties:
        name:
          type: string
          description: 'String - NFT contract name.'
        symbol:
          type: string
          description: 'String - NFT contract symbol abbreviation.'
        totalSupply:
          type: string
          description: 'String - Total number of NFTs in a given NFT collection.'
        tokenType:
          $ref: '#/components/schemas/NftTokenType'
    NftSpamInfo:
      type: object
      description: 'Information about whether and why a contract was marked as spam.'
      properties:
        isSpam:
          type: string
          description: '"true" if contract is spam, else "false"'
        classifications:
          description: 'List of reasons why a contract was classified as spam.'
          type: array
          items:
            type: string
    AddressRiskReport:
      title: AddressRiskReport
      description: AddressRiskReport
      type: object
      required:
        - address
        - chain
        - risk
        - details
      properties:
        case_id:
          type: string
          example: 7c656013-5e9b-4c71-8322-6562c5a9b34c
        request_datetime:
          type: string
          example: 2022-10-04T12:32:44Z
        response_datetime:
          type: string
          example: 2022-10-04T12:32:44Z
        address:
          type: string
          example: "0xc50e6db1637423819edbccb20b15654338d65501"
        chain:
          type: string
          example: eth
        risk:
          type: integer
          example: 85
          minimum: 0
          maximum: 100
        details:
          type: object
          properties:
            own_categories:
              type: array
              items:
                '$ref': '#/components/schemas/RiskReportCategory'
            source_of_funds_categories:
              type: array
              items:
                '$ref': '#/components/schemas/RiskReportCategory'
    TransactionRiskReport:
      title: TransactionRiskReport
      description: TransactionRiskReport
      type: object
      required:
        - address
        - chain
        - risk
        - details
      properties:
        case_id:
          type: string
          example: 7149168f-ad69-4fc9-b027-a16b0ca13081
        request_datetime:
          type: string
          example: 2022-10-04T12:32:44Z
        response_datetime:
          type: string
          example: 2022-10-04T12:32:44Z
        transaction:
          type: string
          example: "0638e15482e9d0fdb08920666390a546f32dd6ab15ffc81ed97e67b73b0d7205"
        chain:
          type: string
          example: btc
        risk:
          type: integer
          example: 85
          minimum: 0
          maximum: 100
        details:
          type: object
          description: Keys are addresses from transaction inputs or outputs
          additionalProperties:
            x-additionalPropertiesName: address
            type: object
            properties:
              own_categories:
                type: array
                items:
                  '$ref': '#/components/schemas/RiskReportCategory'
              source_of_funds_categories:
                type: array
                items:
                  '$ref': '#/components/schemas/RiskReportCategory'
    RiskReportCategory:
      title: RiskReportCategory
      description: RiskReportCategory
      type: object
      required:
        - name
        - category_name
        - risk
      properties:
        adress:
          type: string
          example: "0xc50e6db1637423819edbccb20b15654338d65501"
        name:
          type: string
          example: some-name
        category_name:
          type: string
          example: some-category-name
        risk:
          type: integer
          example: 85
          minimum: 0
          maximum: 100
    ExchangeRate:
      title: ExchangeRate
      description: ExchangeRate
      type: object
      required:
        - currency_pair
        - date
        - rate
      properties:
        currency_pair:
          type: string
          example: "eth/usd"
        date:
          type: string
          example: 2022-06-30
        rate:
          type: number
          example: 1053.9613
    Analytics:
      title: Analytics
      description: Analytics
      type: object
      additionalProperties:
        type: object
        properties:
          sum_txs_all_forever_onchain:
            type: number
            example: 7.0
            description: Sum of all transactions
          sum_txs_all_forever_nft:
            type: number
            example: 7.0
            description: Sum of all NFT transactions
          sum_txs_all_forever_gaming:
            type: number
            example: 7.0
            description: Sum of all gaming transactions
          sum_txs_all_forever_gambling:
            type: number
            example: 7.0
            description: Sum of all gambling transactions
          sum_txs_all_365_onchain:
            type: number
            example: 7.0
            description: Sum of all transactions during last year
          sum_txs_all_365_nft:
            type: number
            example: 7.0
            description: Sum of all NFT transactions during last year
          sum_txs_all_365_gaming:
            type: number
            example: 7.0
            description: Sum of all gaming transactions during last year
          sum_txs_all_365_gambling:
            type: number
            example: 7.0
            description: Sum of all gambling transactions during last year
          sum_txs_all_31_60_onchain:
            type: number
            example: 7.0
            description: Sum of all transactions during previous month
          sum_txs_all_31_60_nft:
            type: number
            example: 7.0
            description: Sum of all NFT transactions during previous month
          sum_txs_all_31_60_gaming:
            type: number
            example: 7.0
            description: Sum of all gaming transactions during previous month
          sum_txs_all_31_60_gambling:
            type: number
            example: 7.0
            description: Sum of all gambling transactions during previous month
          sum_txs_all_30_onchain:
            type: number
            example: 7.0
            description: Sum of all transactions during last month
          sum_txs_all_30_nft:
            type: number
            example: 7.0
            description: Sum of all NFT transactions during last month
          sum_txs_all_30_gaming:
            type: number
            example: 7.0
            description: Sum of all gaming transactions during last month
          sum_txs_all_30_gambling:
            type: number
            example: 7.0
            description: Sum of all gambling transactions during last month
          sum_txs_all_7_onchain:
            type: number
            example: 7.0
            description: Sum of all transactions during last week
          sum_txs_all_7_nft:
            type: number
            example: 7.0
            description: Sum of all NFT transactions during last week
          sum_txs_all_7_gaming:
            type: number
            example: 7.0
            description: Sum of all gaming transactions during last week
          sum_txs_all_7_gambling:
            type: number
            example: 7.0
            description: Sum of all gambling transactions during last week
          sum_txs_in_forever_onchain:
            type: number
            example: 7.0
            description: Sum of all IN transactions
          sum_txs_in_forever_nft:
            type: number
            example: 7.0
            description: Sum of all IN NFT transactions
          sum_txs_in_forever_gaming:
            type: number
            example: 7.0
            description: Sum of all IN gaming transactions
          sum_txs_in_forever_gambling:
            type: number
            example: 7.0
            description: Sum of all IN gambling transactions
          sum_txs_in_365_onchain:
            type: number
            example: 7.0
            description: Sum of all IN transactions during last year
          sum_txs_in_365_nft:
            type: number
            example: 7.0
            description: Sum of all IN NFT transactions during last year
          sum_txs_in_365_gaming:
            type: number
            example: 7.0
            description: Sum of all IN gaming transactions during last year
          sum_txs_in_365_gambling:
            type: number
            example: 7.0
            description: Sum of all IN gambling transactions during last year
          sum_txs_in_31_60_onchain:
            type: number
            example: 7.0
            description: Sum of all IN transactions during previous month
          sum_txs_in_31_60_nft:
            type: number
            example: 7.0
            description: Sum of all IN NFT transactions during previous month
          sum_txs_in_31_60_gaming:
            type: number
            example: 7.0
            description: Sum of all IN gaming transactions during previous month
          sum_txs_in_31_60_gambling:
            type: number
            example: 7.0
            description: Sum of all IN gambling transactions during previous month
          sum_txs_in_30_onchain:
            type: number
            example: 7.0
            description: Sum of all IN transactions during last month
          sum_txs_in_30_nft:
            type: number
            example: 7.0
            description: Sum of all IN NFT transactions during last month
          sum_txs_in_30_gaming:
            type: number
            example: 7.0
            description: Sum of all IN gaming transactions during last month
          sum_txs_in_30_gambling:
            type: number
            example: 7.0
            description: Sum of all IN gambling transactions during last month
          sum_txs_in_7_onchain:
            type: number
            example: 7.0
            description: Sum of all IN transactions during last week
          sum_txs_in_7_nft:
            type: number
            example: 7.0
            description: Sum of all IN NFT transactions during last week
          sum_txs_in_7_gaming:
            type: number
            example: 7.0
            description: Sum of all IN gaming transactions during last week
          sum_txs_in_7_gambling:
            type: number
            example: 7.0
            description: Sum of all IN gambling transactions during last week
          sum_txs_out_forever_onchain:
            type: number
            example: 7.0
            description: Sum of all OUT transactions
          sum_txs_out_forever_nft:
            type: number
            example: 7.0
            description: Sum of all OUT NFT transactions
          sum_txs_out_forever_gaming:
            type: number
            example: 7.0
            description: Sum of all OUT gaming transactions
          sum_txs_out_forever_gambling:
            type: number
            example: 7.0
            description: Sum of all OUT gambling transactions
          sum_txs_out_365_onchain:
            type: number
            example: 7.0
            description: Sum of all OUT transactions during last year
          sum_txs_out_365_nft:
            type: number
            example: 7.0
            description: Sum of all OUT NFT transactions during last year
          sum_txs_out_365_gaming:
            type: number
            example: 7.0
            description: Sum of all OUT gaming transactions during last year
          sum_txs_out_365_gambling:
            type: number
            example: 7.0
            description: Sum of all OUT gambling transactions during last year
          sum_txs_out_31_60_onchain:
            type: number
            example: 7.0
            description: Sum of all OUT transactions during previous month
          sum_txs_out_31_60_nft:
            type: number
            example: 7.0
            description: Sum of all OUT NFT transactions during previous month
          sum_txs_out_31_60_gaming:
            type: number
            example: 7.0
            description: Sum of all OUT gaming transactions during previous month
          sum_txs_out_31_60_gambling:
            type: number
            example: 7.0
            description: Sum of all OUT gambling transactions during previous month
          sum_txs_out_30_onchain:
            type: number
            example: 7.0
            description: Sum of all OUT transactions during last month
          sum_txs_out_30_nft:
            type: number
            example: 7.0
            description: Sum of all OUT NFT transactions during last month
          sum_txs_out_30_gaming:
            type: number
            example: 7.0
            description: Sum of all OUT gaming transactions during last month
          sum_txs_out_30_gambling:
            type: number
            example: 7.0
            description: Sum of all OUT gambling transactions during last month
          sum_txs_out_7_onchain:
            type: number
            example: 7.0
            description: Sum of all OUT transactions during last week
          sum_txs_out_7_nft:
            type: number
            example: 7.0
            description: Sum of all OUT NFT transactions during last week
          sum_txs_out_7_gaming:
            type: number
            example: 7.0
            description: Sum of all OUT gaming transactions during last week
          sum_txs_out_7_gambling:
            type: number
            example: 7.0
            description: Sum of all OUT gambling transactions during last week
          max_balance_forever_onchain:
            type: number
            example: 5.0
            description: Maximum balance
          max_balance_forever_nft:
            type: number
            example: 5.0
            description: Maximum NFT balance
          max_balance_forever_gaming:
            type: number
            example: 5.0
            description: Maximum gaming balance
          max_balance_forever_gambling:
            type: number
            example: 5.0
            description: Maximum gambing balance
          max_balance_365_onchain:
            type: number
            example: 5.0
            description: Maximum balance during last year
          max_balance_365_nft:
            type: number
            example: 5.0
            description: Maximum NFT balance during last year
          max_balance_365_gaming:
            type: number
            example: 5.0
            description: Maximum gaming balance during last year
          max_balance_365_gambling:
            type: number
            example: 5.0
            description: Maximum gambling balance during last year
          max_balance_31_60_onchain:
            type: number
            example: 5.0
            description: Maximum balance during previous month
          max_balance_31_60_nft:
            type: number
            example: 5.0
            description: Maximum NFT balance during previous month
          max_balance_31_60_gaming:
            type: number
            example: 5.0
            description: Maximum gaming balance during previous month
          max_balance_31_60_gambling:
            type: number
            example: 5.0
            description: Maximum gambling balance during previous month
          max_balance_30_onchain:
            type: number
            example: 5.0
            description: Maximum balance during last month
          max_balance_30_nft:
            type: number
            example: 5.0
            description: Maximum NFT balance during last month
          max_balance_30_gaming:
            type: number
            example: 5.0
            description: Maximum gaming balance during last month
          max_balance_30_gambling:
            type: number
            example: 5.0
            description: Maximum gambling balance during last month
          max_balance_7_onchain:
            type: number
            example: 5.0
            description: Maximum balance during last week
          max_balance_7_nft:
            type: number
            example: 5.0
            description: Maximum NFT balance during last week
          max_balance_7_gaming:
            type: number
            example: 5.0
            description: Maximum gaming balance during last week
          max_balance_7_gambling:
            type: number
            example: 5.0
            description: Maximum gambling balance during last week
      properties:
        count_txs_all_forever_onchain:
          type: integer
          example: 1
          description: Transactions count
        count_txs_all_forever_nft:
          type: integer
          example: 1
          description: NFT transactions count
        count_txs_all_forever_gaming:
          type: integer
          example: 1
          description: Gaming transactions count
        count_txs_all_forever_gambling:
          type: integer
          example: 1
          description: Gambling transactions count
        count_txs_all_365_onchain:
          type: integer
          example: 1
          description: Transactions count during last year
        count_txs_all_365_nft:
          type: integer
          example: 1
          description: NFT transactions count during last year
        count_txs_all_365_gaming:
          type: integer
          example: 1
          description: Gaming transactions count during last year
        count_txs_all_365_gambling:
          type: integer
          example: 1
          description: Gambling transactions count during last year
        count_txs_all_31_60_onchain:
          type: integer
          example: 1
          description: Transactions count during previous month
        count_txs_all_31_60_nft:
          type: integer
          example: 1
          description: NFT transactions count during previous month
        count_txs_all_31_60_gaming:
          type: integer
          example: 1
          description: Gaming transactions count during previous month
        count_txs_all_31_60_gambling:
          type: integer
          example: 1
          description: Gambling transactions count during previous month
        count_txs_all_30_onchain:
          type: integer
          example: 1
          description: Transactions count during last month
        count_txs_all_30_nft:
          type: integer
          example: 1
          description: NFT transactions count during last month
        count_txs_all_30_gaming:
          type: integer
          example: 1
          description: Gaming transactions count during last month
        count_txs_all_30_gambling:
          type: integer
          example: 1
          description: Gambling transactions count during last month
        count_txs_all_7_onchain:
          type: integer
          example: 1
          description: Transactions count during last week
        count_txs_all_7_nft:
          type: integer
          example: 1
          description: NFT transactions count during last week
        count_txs_all_7_gaming:
          type: integer
          example: 1
          description: Gaming transactions count during last week
        count_txs_all_7_gambling:
          type: integer
          example: 1
          description: Gambling transactions count during last week
        count_txs_in_forever_onchain:
          type: integer
          example: 1
          description: IN transactions count
        count_txs_in_forever_nft:
          type: integer
          example: 1
          description: IN NFT transactions count
        count_txs_in_forever_gaming:
          type: integer
          example: 1
          description: IN gaming transactions count
        count_txs_in_forever_gambling:
          type: integer
          example: 1
          description: IN gambling transactions count
        count_txs_in_365_onchain:
          type: integer
          example: 1
          description: IN transactions count during last year
        count_txs_in_365_nft:
          type: integer
          example: 1
          description: IN NFT transactions count during last year
        count_txs_in_365_gaming:
          type: integer
          example: 1
          description: IN gaming transactions count during last year
        count_txs_in_365_gambling:
          type: integer
          example: 1
          description: IN gambling transactions count during last year
        count_txs_in_31_60_onchain:
          type: integer
          example: 1
          description: IN transactions count during previous month
        count_txs_in_31_60_nft:
          type: integer
          example: 1
          description: IN NFT transactions count during previous month
        count_txs_in_31_60_gaming:
          type: integer
          example: 1
          description: IN gaming transactions count during previous month
        count_txs_in_31_60_gambling:
          type: integer
          example: 1
          description: IN gambling transactions count during previous month
        count_txs_in_30_onchain:
          type: integer
          example: 1
          description: IN transactions count during last month
        count_txs_in_30_nft:
          type: integer
          example: 1
          description: IN NFT transactions count during last month
        count_txs_in_30_gaming:
          type: integer
          example: 1
          description: IN gaming transactions count during last month
        count_txs_in_30_gambling:
          type: integer
          example: 1
          description: IN gambling transactions count during last month
        count_txs_in_7_onchain:
          type: integer
          example: 1
          description: IN transactions count during last week
        count_txs_in_7_nft:
          type: integer
          example: 1
          description: IN NFT transactions count during last week
        count_txs_in_7_gaming:
          type: integer
          example: 1
          description: IN gaming transactions count during last week
        count_txs_in_7_gambling:
          type: integer
          example: 1
          description: IN gambling transactions count during last week
        count_txs_out_forever_onchain:
          type: integer
          example: 1
          description: OUT transactions count
        count_txs_out_forever_nft:
          type: integer
          example: 1
          description: OUT NFT transactions count
        count_txs_out_forever_gaming:
          type: integer
          example: 1
          description: OUT gaming transactions count
        count_txs_out_forever_gambling:
          type: integer
          example: 1
          description: OUT gambling transactions count
        count_txs_out_365_onchain:
          type: integer
          example: 1
          description: OUT transactions count during last year
        count_txs_out_365_nft:
          type: integer
          example: 1
          description: OUT NFT transactions count during last year
        count_txs_out_365_gaming:
          type: integer
          example: 1
          description: OUT gaming transactions count during last year
        count_txs_out_365_gambling:
          type: integer
          example: 1
          description: OUT gambling transactions count during last year
        count_txs_out_31_60_onchain:
          type: integer
          example: 1
          description: OUT transactions count during previous month
        count_txs_out_31_60_nft:
          type: integer
          example: 1
          description: OUT NFT transactions count during previous month
        count_txs_out_31_60_gaming:
          type: integer
          example: 1
          description: OUT gaming transactions count during previous month
        count_txs_out_31_60_gambling:
          type: integer
          example: 1
          description: OUT gambling transactions count during previous month
        count_txs_out_30_onchain:
          type: integer
          example: 1
          description: OUT transactions count during last month
        count_txs_out_30_nft:
          type: integer
          example: 1
          description: OUT NFT transactions count during last month
        count_txs_out_30_gaming:
          type: integer
          example: 1
          description: OUT gaming transactions count during last month
        count_txs_out_30_gambling:
          type: integer
          example: 1
          description: OUT gambling transactions count during last month
        count_txs_out_7_onchain:
          type: integer
          example: 1
          description: OUT transactions count during last week
        count_txs_out_7_nft:
          type: integer
          example: 1
          description: OUT NFT transactions count during last week
        count_txs_out_7_gaming:
          type: integer
          example: 1
          description: OUT gaming transactions count during last week
        count_txs_out_7_gambling:
          type: integer
          example: 1
          description: OUT gambling transactions count during last week
        first_txs_all_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when first transaction occurred
        first_txs_all_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when first NFT transaction occurred
        first_txs_all_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when first gaming transaction occurred
        first_txs_all_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when first gambling transaction occurred
        first_txs_in_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when first IN transaction occurred
        first_txs_in_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when first IN NFT transaction occurred
        first_txs_in_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when first IN gaming transaction occurred
        first_txs_in_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when first IN gambling transaction occurred
        first_txs_out_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when first OUT transaction occurred
        first_txs_out_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when first OUT NFT transaction occurred
        first_txs_out_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when first OUT gaming transaction occurred
        first_txs_out_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when first OUT gambling transaction occurred
        last_txs_all_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when last transaction occurred
        last_txs_all_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when last NFT transaction occurred
        last_txs_all_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when last gaming transaction occurred
        last_txs_all_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when last gambling transaction occurred
        last_txs_in_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when last IN transaction occurred
        last_txs_in_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when last IN NFT transaction occurred
        last_txs_in_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when last IN gaming transaction occurred
        last_txs_in_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when last IN gambling transaction occurred
        last_txs_out_onchain:
          type: integer
          example: 1674481020
          description: Unix timestamp when last OUT transaction occurred
        last_txs_out_nft:
          type: integer
          example: 1674481020
          description: Unix timestamp when last OUT NFT transaction occurred
        last_txs_out_gaming:
          type: integer
          example: 1674481020
          description: Unix timestamp when last OUT gaming transaction occurred
        last_txs_out_gambling:
          type: integer
          example: 1674481020
          description: Unix timestamp when last OUT gambling transaction occurred

security:
  - UserJWT: [ ]
  - ProjectJWT: [ ]
  - ProjectToken: [ ]
